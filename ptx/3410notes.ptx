<?xml version="1.0" encoding="UTF-8" ?>



<pretext xmlns:xi="http://www.w3.org/2001/XInclude" xml:lang="en-US">
  <docinfo>
    <rename element="inlineexercise">Exercise</rename>
    <macros>
      \newcommand{\spn}{\operatorname{span}}
      \newcommand{\bbm}{\begin{bmatrix}}
      \newcommand{\ebm}{\end{bmatrix}}
      \newcommand{\R}{\mathbb{R}}
      \newcommand{\C}{\mathbb{C}}
      \newcommand{\im}{\operatorname{im}}
      \newcommand{\nll}{\operatorname{null}}
      \newcommand{\csp}{\operatorname{col}}
      \newcommand{\rank}{\operatorname{rank}}
      \newcommand{\diag}{\operatorname{diag}}
      \newcommand{\tr}{\operatorname{tr}}
      \newcommand{\dotp}{\!\boldsymbol{\cdot}\!}
      \newcommand{\len}[1]{\lVert #1\rVert}
      \newcommand{\abs}[1]{\lvert #1\rvert}
      \newcommand{\proj}[2]{\operatorname{proj}_{#1}{#2}}
      \newcommand{\bz}{\overline{z}}
      \newcommand{\zz}{\mathbf{z}}
      \newcommand{\uu}{\mathbf{u}}
      \newcommand{\vv}{\mathbf{v}}
      \newcommand{\ww}{\mathbf{w}}
      \newcommand{\xx}{\mathbf{x}}
      \newcommand{\yy}{\mathbf{y}}
      \newcommand{\zer}{\mathbf{0}}
      \newcommand{\basis}[2]{\{\mathbf{#1}_1,\mathbf{#1}_2,\ldots,\mathbf{#1}_{#2}\}}
    </macros>
    <latex-image-preamble><![CDATA[
      \usepackage{pgfplots}
      \usetikzlibrary{positioning,matrix,arrows,arrows.meta}
    ]]></latex-image-preamble>
  </docinfo>
  <book xml:id="linalg-notes-with-computations">
    <title>Lecture Notes for Math 3410, with Computational Examples</title>

    <frontmatter>

      <titlepage>
          <author>
              <personname>Sean Fitzpatrick</personname>
              <institution>University of Lethbridge</institution>
          </author>
          <date><today /></date>
      </titlepage>

      <preface>
        <p>
          Linear algebra is a mature, rich subject, full of both fascinating theory and useful applications.
          One of the things you might have taken away from a first course in the subject is that there's a lot of tedious calculation involved.
          This is true, if you're a human. But the algorithms you learn in a course like Math 1410 are easily implemented on a computer.
          If we want to be able to discuss any of the interesting applications of linear algebra,
          we're going to need to learn how to do linear algebra on a computer.
        </p>
        <p>
          There are many good mathematical software products that can deal with linear algebra,
          like Maple, Mathematica, and MatLab. But all of these are proprietary, and expensive.
          Sage is a popular open source system for mathematics,
          and students considering further studies in mathematics would do well to learn Sage.
          Since most people in Math 3410 are probably not considering a career as a mathematician,
          we'll try to do everything in Python.
        </p>
        <p>
          Python is a very poplular programming language, partly because of its ease of use.
          Those of you enrolled in Education may find yourself teaching Python to your students one day.
          Also, if you do want to use Sage, you're in luck: Sage is an amalamation of many different software tools,
          including Python. So any Python code you encouter in this course can also be run on Sage.
        </p>
      </preface>

    </frontmatter>

    <xi:include href="./chapter_vector_space.ptx"/>

    <xi:include href="./chapter_linear_transformations.ptx"/>

    <xi:include href="./chapter_orthogonality.ptx"/>

    <xi:include href="./chapter_diagonalization.ptx"/>

    <xi:include href="./chapter_change_basis.ptx"/>

    <backmatter>
      <xi:include href="./chapter_computation.ptx"/>
    </backmatter>
  </book>
</pretext>
